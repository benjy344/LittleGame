/************************

Variables

*************************/
var avatar, 
	monster,
	nextLevel = 50;

$(document).ready(function(){
	init();
})

function init() {
	$('.js-open-button').on('click', function(){
		$('#bag').toggleClass('open');
		$('.hamburger').toggleClass('is-active');
	})

	extendDescription();
	articleSlide();
}






function extendDescription() {
	$('.js-object-to-extend').on('click', function(){
		$(this).next().toggleClass('expend');
	})
}
function verfifButton(count) {

	
	var $room = $('.js-room-'+count);
	var $resultFindObjects;
	var $explorer;

	$room.find('.js-result-find-objects').length != 0 ?  $resultFindObjects = $room.find('.js-result-find-objects') : $resultFindObjects = "";
	$room.find('.js-explorer').length != 0 ?  $explorer = $room.find('.js-explorer') : $explorer = "";
	if ($explorer != "") {
		$explorer.on('click', function(){
			$('.js-actions').hide();
			$resultFindObjects.removeClass('hidden');
		})
	}

	$('.js-add-object').on('click', function(){
		$(this).remove();
	})

	if ($room.find('.js-attack').length) {
		avatar = JSON.parse($('#avatar').attr('data-avatar'));
		monster = JSON.parse($room.find('.js-monster').attr('data-monster'));
		getFight();
	}
	if ($room.find('.js-attack-surprise').length) {
		$room.find('.js-attack-surprise').on('click', function(){
			avatar = JSON.parse($('#avatar').attr('data-avatar'));
			monster = JSON.parse($room.find('.js-monster').attr('data-monster'));
			getFight(true);

		})
	}
}
function articleSlide() {
  var art = $('.js-article'),
      mag = $('.js-rooms-container'),
      aCount = art.length;  
  var mLength = aCount * 100,
      aLength = 100 / aCount;
  
  mag.css('width', mLength + '%');
  art.css('width', aLength + '%');
  
  var pos = 0,
  	  count = 0,
      max = mLength - 100;
  
  $('.nxt').on('click', function(){
    if(pos > "-" + max){
      pos += -100;
      count += 1;
      mag.css('margin-left', pos + '%');
      verfifButton(count);
    }
  });
  
  $('.bck').on('click', function(){
    if(pos < 0 ){
      pos += 100;
      count += -1;
      mag.css('margin-left', pos + '%');
    }
  });
 
}

function getFight(surprise=false) {
	var	win = "fight",
		count = 0;

	if (win === "fight") {
		count++;
		win = fight(surprise);
		surprise = false;	
	}

	if (win === true) {

		console.log('you win in '+count+'hint', avatar)
	} else if (win === false){
		console.log('you wloosein in '+count+'hint')
	} else {

		//attendre reponce boutons, afficher la vie des perso
		var alea = Math.random() * (10 - 1) + 1;
		console.log(avatar)
		alea === 4 ? getFight(true) : getFight();	
	}


}
function fight(surprise) {
	console.log('fight')
	var force = (avatar.force + avatar.forceW);
	if (surprise){
		monster.hp = (monster.hp - (force*1.2));
	}else {
		monster.hp = (monster.hp - force);
	}
	avatar.hp = avatar.hp - monster.force;
	if (monster.hp <= 0) {
		win = true;

		gainExp();

		renderAvatar();
	} else if (avatar.hp <= 0) {
		win = false;

		renderAvatar();
	} else {
		win = "fight";
		renderAvatar();
	} 
	console.log('avatar ', avatar.hp)
	console.log('monster ', monster.hp)
	return win;
}


function gainExp() {
	avatar.exp += monster.exp;

	if (avatar.exp >= nextLevel) levelUp();
}
function levelUp() {
	console.log('LEVEL UP')
	avatar.level += 1;
	nextLevel += (nextLevel*1.5);
	avatar.maxHp += 3;
	avatar.hp += 3;

	switch (avatar.job) {
		case "Voleur":
			avatar.force += 2;
			avatar.agility +=4;
			avatar.inteligence +=3;

				switch (avatar.level) {
					case 1:
						console.log('voir possibles attaques sp√©');
						break;
				}
			break;
		case "Guerrier":
			avatar.force += 5;
			avatar.agility +=2;
			avatar.inteligence +=2;
			break;
		case "Mage":
			avatar.force += 3;
			avatar.agility += 3;
			avatar.inteligence +=3;
			break;
	}

}
function renderAvatar() {
	console.log("render ",avatar)
	$url = '../majAvatar?MaxHealth='+avatar.maxHp+'&hp='+avatar.hp+'&level='+avatar.level+'&agility='+avatar.agility+'&force='+avatar.force+'&inteligence='+avatar.inteligence+'&exp='+avatar.exp;
	$.get({
	  url: $url,
	  dataType: "script"
	});
}



























