/************************

Variables

*************************/
var avatar, 
	monster,
	countRoom = 0,
	$room, 
	pos = 0,
	win = "fight",
	$currentMonsterLife,
	nextLevel;

$(document).ready(function(){
	init();
})

function init() {
	$room = $('.js-room-'+countRoom);
	$('.js-open-button').off();
	$('.js-open-button').on('click', function(){
		$('#bag').toggleClass('open');
		$('.hamburger').toggleClass('is-active');
	})
	nextLevel = $('.js-avatar-exp').attr('data-next-level');
	var currentExp = $('.js-avatar-current-exp').attr('data-exp');
	var currenthp = $('.js-avatar-current-hp').attr('data-hp');
	var maxHphp = $('.js-avatar-hp').attr('data-hpmax');
	$('.js-avatar-current-exp').css('width',calculPercentLife(currentExp, nextLevel) );
	$('.js-avatar-controller .js-avatar-current-hp').css('width', calculPercentLife(currenthp, maxHphp));

	extendDescription();
	articleSlide();
}






function extendDescription() {
	$('.js-object-to-extend').off();
	$('.js-object-to-extend').on('click', function(){
		$(this).next().toggleClass('expend');
	})
}
function verfifButton() {

	
	$room = $('.js-room-'+countRoom);
	var $resultFindObjects;
	var $explorer;

	$room.find('.js-result-find-objects').length != 0 ?  $resultFindObjects = $room.find('.js-result-find-objects') : $resultFindObjects = "";
	$room.find('.js-explorer').length != 0 ?  $explorer = $room.find('.js-explorer') : $explorer = "";
	if ($explorer != "") {
		$explorer.on('click', function(){
			$('.js-actions').hide();
			$resultFindObjects.removeClass('hidden');
		})
	}

	if($('.js-add-object').length){
		$('.js-add-object').off();
		$('.js-add-object').on('click', function(){
			$(this).remove();
		})
	}
	

		

	if ($room.find('.js-attack').length) {
		avatar = JSON.parse($('#avatar').attr('data-avatar'));
		monster = JSON.parse($room.find('.js-monster').attr('data-monster'));
		$currentMonsterLife = $room.find('.js-monster-current-hp');
		$room.find('.js-fight-buttons').removeClass('hidden');
	}
	
	if ($room.find('.js-attack-surprise-buttons').length) {
		$('.js-attack-surprise').off();
		$room.find('.js-attack-surprise').on('click', function(){
			avatar = JSON.parse($('#avatar').attr('data-avatar'));
			monster = JSON.parse($room.find('.js-monster').attr('data-monster'));
			$currentMonsterLife = $room.find('.js-monster-current-hp');
			getFight(true);
			$room.find('.js-attack-surprise-buttons').addClass('hidden');
			if (win === 'fight') $room.find('.js-fight-buttons').removeClass('hidden');
			
		})
	}

	if ($room.find('.js-attack-button').length) {
		$('.js-attack-button').off();
		$room.find('.js-attack-button').on('click', function(){
			avatar = JSON.parse($('#avatar').attr('data-avatar'));
			monster = JSON.parse($room.find('.js-monster').attr('data-monster'));
			$currentMonsterLife = $room.find('.js-monster-current-hp');
			getFight();

		})
	}
}


function articleSlide() {
	var art = $('.js-article'),
	mag = $('.js-rooms-container'),
	aCount = art.length;  
	var mLength = aCount * 100,
	aLength = 100 / aCount;

	mag.css('width', mLength + '%');
	art.css('width', aLength + '%');

	max = mLength - 100;
	$('.nxt').off();
	$('.nxt').on('click', function(){
		if(pos > "-" + max){
			pos += -100;
			countRoom += 1;
			mag.css('margin-left', pos + '%');
			verfifButton();
		}
	});
	$('.bck').off();
	$('.bck').on('click', function(){
		if(pos < 0 ){
			pos += 100;
			countRoom += -1;
			mag.css('margin-left', pos + '%');
		}
	});

}























function getFight(surprise=false) {
		win = "fight";
	var	count = 0;

	if (win === "fight") {
		count++;
		win = fight(surprise);
		surprise = false;	
	}

	if (win === true) {

		console.log('you win in '+count+'hint', avatar)
	} else if (win === false){
		console.log('you wloosein in '+count+'hint')
	} else {
		console.log('wait action')
		//attendre reponce boutons, afficher la vie des perso
		//$('.js-fight-buttons').removeClass('hidden');	
	}


}
function fight(surprise) {
	console.log('fight')
	var force = (avatar.force + avatar.forceW);
	var avatarDefence = (avatar.defence + avatar.defenceW);
	var $currentMonsterLife = $room.find('.js-monster-current-hp');
	var MaxMonsterLife = monster.hpMax;
	var win = "fight";

	
	if (surprise){
		// Si attaque par suprise => avantage avatar, le monstre n'attaque pas 
		monster.hp = (monster.hp - (force*1.2));
		if (monster.hp < 0) { monster.hp = 0;
			renderMonster();
			win = true;
		} else {
			renderMonster();
		}
	}else {
		// Le plus rapide commence
		if (avatar.agility >= monster.agility) {
			//si l'avatar est le plus rapide 
			//attaque le monstre
			monster.hp = (monster.hp - force);
			if (monster.hp <= 0) { 
				//si le montre est KO => avatar WIN
				monster.hp = 0;
				renderMonster();
				win = true;
			} else {
				renderMonster();
				//si le montre n'est pas KO, il attaque
				avatar.hp = (avatar.hp + (avatarDefence / 2)) - monster.force;

				if (avatar.hp <= 0) { 
					avatar.hp = 0;
					renderAvatar();
					//si l'avatar est KO => avatar loose
					win = false;
				} else {
					//l'avatar n'est pas mort, le combat continue
					renderAvatar();
				}
			}
		} else {
			//si le monstre est le plus rapide
			//attaque l'avatar
			avatar.hp = (avatar.hp + (avatarDefence / 2)) - monster.force;

			if (avatar.hp <= 0) { 
				avatar.hp = 0;
				renderAvatar();
				//si l'avatar est KO => avatar loose
				win = false;
			} else {
				//l'avatar n'est pas mort, le combat continue
				renderAvatar();
				monster.hp = (monster.hp - force);

				if (monster.hp <= 0) { 
					//si le montre est KO => avatar WIN
					monster.hp = 0;
					renderMonster();
					win = true;
				} else {
					//sinon le combat continue
					renderMonster();
				}
			}
		}
	}
	//avatar.hp = avatar.hp - monster.force;
	if (win === true) {
		$room.find('.js-result-find-objects').removeClass('hidden');
		$room.find('.js-next-room').removeClass('hidden');
		$room.find('.js-fight-buttons').addClass('hidden-delay');
		$room.find('.js-monster-hp').addClass('hidden-delay');
		gainExp();
		renderAvatar();
		//montrer les objets drop par le monstre + bouton continuer
	} else if (win === false) {
		GameOver();
	} else {
		win = "fight";
		//le combat continue 
		//afficher les boutons de fight
	} 
	return win;
}


function gainExp() {
	avatar.exp += monster.exp;

	if (avatar.exp >= avatar.nextLevel) levelUp();
}
function levelUp() {
	console.log('LEVEL UP')
	avatar.level += 1;
	avatar.exp = avatar.exp - avatar.nextLevel;
	avatar.nextLevel += (avatar.nextLevel*1.5);
	avatar.maxHp += 3;
	avatar.hp += 3;

	switch (avatar.job) {
		case "Voleur":
			avatar.force += 2;
			avatar.agility +=4;
			avatar.inteligence +=3;
			avatar.defence +=2;

				switch (avatar.level) {
					case 1:
						console.log('voir possibles attaques spé');
						break;
				}
			break;
		case "Guerrier":
			avatar.force += 5;
			avatar.agility +=2;
			avatar.inteligence +=2;
			avatar.defence +=4;
			break;
		case "Mage":
			avatar.force += 3;
			avatar.agility += 3;
			avatar.inteligence +=3;
			avatar.defence +=3;
			break;
	}

}

function calculPercentLife(current, max) {
	var result;
	current === 0 ? result = 0 : result = (current*100)/max;
	
	return ''+result+'%'
}


function renderAvatar() {
	$url = '../majAvatar?MaxHealth='+avatar.maxHp+'&hp='+avatar.hp+'&level='+avatar.level+'&nextLevel='+avatar.nextLevel+'&defence='+avatar.defence+'&agility='+avatar.agility+'&force='+avatar.force+'&inteligence='+avatar.inteligence+'&exp='+avatar.exp;
	$.get({
	  url: $url,
	  dataType: "script"
	});
	$avatarController = $('.js-avatar-controller');
	$avatarController.find('.js-avatar-hp').attr('data-hpMax', avatar.maxHp);
	$avatarController.find('.js-avatar-current-hp').attr('data-hp', avatar.hp);
	$avatarController.find('.js-avatar-exp').attr('data-next-level', avatar.nextLevel);
	$avatarController.find('.js-avatar-current-exp').attr('data-exp', avatar.exp);
	$avatarController.find('.js-avatar-current-hp').css('width', calculPercentLife(avatar.hp, avatar.maxHp));
	$avatarController.find('.js-avatar-current-exp').css('width', calculPercentLife(avatar.exp, avatar.nextLevel));
	$avatarController.find(".js-agility").html("Agilité : "+avatar.agility);
    $avatarController.find(".js-force").html("Force : "+avatar.force);
    $avatarController.find(".js-intéligence").html("Intéligence : "+avatar.inteligence);
    $avatarController.find(".js-defence").html("Défence : "+avatar.defence);
    $avatarController.find('.level').html('Lvl : '+avatar.level);
    $avatarController.find('.js-hpcount').html('PV : '+avatar.hp+'/'+avatar.maxHp);
    $avatarController.find('.js-expcount').html('Exp : '+avatar.exp+'/'+avatar.nextLevel);


}

function renderMonster() {
	$room.find('.js-monster-current-hp').css('width', calculPercentLife(monster.hp, monster.hpMax) );
	$room.find('.js-monster').attr('data-monster', JSON.stringify(monster));
}

function GameOver() {
	$.get({
	  url: '/gameover'
	});
}

























